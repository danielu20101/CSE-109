/*
 * chgTxt C program
 * Program 0 assignment
 * CSE109 Fall 2021
 * student ID (e.g., idk321): deu224
 * student Last name: Unhuryan
 * student First name: Daniel
 * gitHub ID: danielu20101
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

void parseArgs (int argc, char *argv[], int *revWord, int *revLine,
		int *toggle, int *delete);
void alterInput (int revWord, int revLine, int toggle, int delete);
void flipWord (char *in, int start, int end);
void flipLine (char *in[]);
void toggleLetters (char *in[]);
void deleteDigits (char *in[]);


void
flipLine (char *in[])
{
  /* Loop through the buffer
    Every time there is a ' ' character,
    stop the loop and enter the collected characters together into same index,
    after all the looping has finished, print the array backwards and concatenate each index with ' '*/
    
    int i, j, len, startIndex, endIndex;
    len = strlen(*in);
  	endIndex = len - 1;
  	
  	for(i = len - 1; i >= 0; i--)
  	{
		if(*in[i] == ' ' || i == 0)
		{
			if(i == 0)
			{
				startIndex = 0;
			}
			else
			{
				startIndex = i + 1;
			}
			for(j = startIndex; j <= endIndex; j++)
			{
				printf("%c", *in[j]);
			}
			endIndex = i - 1;
			printf(" ");				
		} 
	}
}


void
flipWord (char *line, int start, int end)
{

  char temp;
  while (start < end)
    {
      temp = line[start];
      line[start] = line[end];
      line[end] = temp;
      start++;
      end--;

    }
}


void
deleteDigits (char *in[]){
  for (int i = 0; i < strlen(*in); i++)
    {
      if (isdigit(in[0][i]))
	{
	  remove(*in[0][i]);
	}
    }
}


void
toggleLetters (char *in[])
{
  for (int i = 0; in[i]; i++)
    {
      if (islower (in[i]))
	  {
	  toupper(*in[i]);
	  }
	  else
	  {
	  continue;}
	  }
	}




	  void parseArgs (int argc, char *argv[], int *revWord, int *revLine,
			  int *toggle, int *delete)
	  {
	  for (int i = 1; i < argc; i++)
	  {
	  //printf ("argv[%u] = %s\n", i, argv[i]);
	  if (argv[i][0] == '-')
	  //why is it argv[i][0] and not just argv[0]
	  {

	  if (argv[i][1] == 't')
	  {
	  *toggle = 1;}
	  else
	  if (argv[i][1] == 'l')
	  {
	  *revLine = 1;}
	  else
	  if (argv[i][1] == 'd')
	  {
	  *delete = 1;}
	  else
	  if (argv[i][1] == 'w')
	  {
	  *revWord = 1;}
	  else
	  {
	  fprintf (stderr,
		   "Invalid Input -- needs to be a 't', 'l', 'd', or 'w'");
	  exit (1);}
	  }
	  else
	  {
	  fprintf (stderr, "Invalid Input -- First character must be a '-'");
	  exit (1);}
	  }
	  }

	  void alterInput (int revWord, int revLine, int toggle, int delete)
	  {
	  char *buffer = NULL;	// buffer to hold string read
	  size_t length = 0;
	  ssize_t numchars = 0;
	  
	  while ((numchars = getline(&buffer, &length, stdin)) != -1)
	  {
	  printf ("buffer %s\n", buffer); if (revWord)
	  {
	  flipWord (buffer,int s,int e);}
	  else
	  if (revLine)
	  {
	  flipLine (&buffer);}
	  else
	  if (toggle)
	  {
	  toggleLetters (&buffer);}
	  else
	  if (delete)
	  {
	  deleteDigits (&buffer);}
	  }
	  }


	  int main (int argc, char **argv)
	  {
	  int revWord = 0, revLine = 0, toggle = 0, delete = 0;
	  //printf("%d,%s",argc,argv[1]);
	  parseArgs (argc, argv, &revWord, &revLine, &toggle, &delete);
	  alterInput (revWord, revLine, toggle, delete); return 0;}
